{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","GetGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,OAQd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SArBU,SAACP,GACnBF,EAAcE,EAAEQ,OAAOF,Y,uBCNlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAMgB,IAAON,IACxB,+BAAMA,EAAN,OCJCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBtC,OAZAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAIrB,CAACpB,IAEGqB,EDfwBK,CAAa1B,GAAhCa,EAHyB,EAG9BN,KAAaa,EAHiB,EAGjBA,QAGpB,OACI,oCACI,wBAAIJ,UAAU,gDAAd,IAAgEhB,EAAhE,KAECoB,GAAW,sCAEZ,yBAAKJ,UAAU,aAGVH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACIiB,IAAOjB,EAAIC,IACND,UEcdkB,EA/BM,WAAO,IAAD,EAIa1C,mBAAS,CAAC,cAJvB,mBAIhB2C,EAJgB,KAIJ5C,EAJI,KAUzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAGA,4BAEM4C,EAAWpB,KAAK,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACG2B,IAAK3B,EACLA,SAAUA,UCpB9B8B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.c47668ac.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n    \n    const [inputValue, setInputValue] = useState('');\n\n    const changeHandler = (e) => {\n        setInputValue(e.target.value)\n        // console.log(e.target.value)\n    } \n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n            setCategories(cat => [inputValue,...cat])\n            setInputValue('')\n        }\n        \n        // console.log('submit hecho')\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input  \n                type='text'\n                value={inputValue}\n                onChange={changeHandler}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories:PropTypes.func.isRequired\n}\n","\n\nexport const GetGifs = async(category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=qu0WSdzzGLSut34PAk03WrEclpySl5Bz`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title:img.title,\n            url:img.images?.downsized_medium.url,\n        }\n    })\n\n    return gifs;\n};\n\n","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n\n    // console.log({id, title, url})\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt= { title }/>\n            <p> { title } </p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n\n    const {data:images, loading} = useFetchGifs(category);\n\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__lightSpeedInRight\"> { category } </h3>\n\n            {loading && <p>Loading</p>}\n\n            <div className=\"card-grid\">\n\n\n                {images.map( img => (\n                    <GifGridItem \n                        key= { img.id }\n                        { ...img }\n                    />\n                ))}\n\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { GetGifs } from \"../helpers/getGifs\"\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading:true,\n    })\n\n    useEffect( ()=> {\n\n        GetGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading:false\n                });\n            })\n\n    }, [category])\n\n    return state;\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\n\nconst GifExpertApp = () => {\n\n\n\n    const [categories, setCategories] = useState(['One Punch'])\n\n    // const handleAdd= ()=>{\n    //     setCategories([...categories,'HunterXHunter'])\n    // }\n    \n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories}/>\n      <hr/>\n\n\n      <ol>\n          {\n            categories.map( category => \n                 <GifGrid \n                    key={category}\n                    category={category}\n                />\n            )\n          }\n      </ol>\n    </>\n  )\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}